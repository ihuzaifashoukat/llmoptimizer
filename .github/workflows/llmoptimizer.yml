name: llmoptimizer

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch: {}

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Verify CLI version matches package.json
        run: >
          node -e "const pkg=require('./package.json');
          const fs=require('fs');
          const s=fs.readFileSync('src/cli.ts','utf8');
          const m=s.match(/\.version\('(.*?)'\)/);
          if(!m){console.error('CLI version not found in src/cli.ts');process.exit(1)}
          if(m[1]!==pkg.version){console.error(`Version mismatch: cli ${m[1]} vs pkg ${pkg.version}`);process.exit(1)}
          console.log('Version OK:', m[1]);"

      - name: Lint for legacy llm.txt references
        run: |
          set -e
          if grep -RIn --exclude-dir=node_modules --exclude-dir=.git --exclude=dist --exclude=coverage --exclude=build --exclude=**/*.tgz --exclude=CHANGELOG.md 'llm.txt' .; then
            echo 'Found legacy llm.txt references';
            exit 1;
          else
            echo 'No legacy llm.txt references found.';
          fi

  build-and-generate:
    runs-on: ubuntu-latest
    needs: [quality]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      - name: Generate docs llm files
        run: |
          npx llmoptimizer docs \
            --out-dir build \
            --docs-dir docs \
            --include-blog \
            --blog-dir blog \
            --ignore "advanced/*" "private/*" \
            --order "getting-started/*" "guides/*" "api/*" \
            --ignore-path docs \
            --add-path api \
            --exclude-imports \
            --remove-duplicate-headings \
            --generate-markdown-files \
            --site-url "${{ secrets.SITE_URL }}" \
            --base-url "/" \
            --site-title "${{ secrets.SITE_TITLE }}" \
            --site-tagline "${{ secrets.SITE_TAGLINE }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: llm-files
          path: |
            build/llms.txt
            build/llms-full.txt
            build/llms-stats.json
