export interface RobotsOptions {
  allowAll?: boolean
  llmAllow?: boolean
  llmBots?: string[]
  // Explicitly list/search-enable mainstream search engine bots
  searchAllow?: boolean
  searchBots?: string[]
  sitemaps?: string[]
}

const DEFAULT_LLM_BOTS = [
  'GPTBot', // OpenAI
  'ChatGPT-User', // OpenAI browsing
  'Google-Extended', // Google AI data usage
  'CCBot', // Common Crawl
  'anthropic-ai', // Anthropic
  'ClaudeBot', // Anthropic
  'Claude-Web', // Anthropic
  'PerplexityBot', // Perplexity
  'Applebot-Extended', // Apple AI data usage
  'Meta-ExternalAgent', // Meta AI
  'FacebookBot', // Meta
  'Amazonbot', // Amazon
  'Bytespider', // ByteDance
]

const DEFAULT_SEARCH_BOTS = [
  'Googlebot',
  'Googlebot-Image',
  'Googlebot-Video',
  'Mediapartners-Google',
  'AdsBot-Google',
  'Bingbot',
  'BingPreview',
  'DuckDuckBot',
  'Slurp', // Yahoo
  'Baiduspider',
  'YandexBot',
  'Sogou',
  'Exabot',
  'ia_archiver', // Alexa
]

export function generateRobotsTxt(opts: RobotsOptions = {}) {
  const lines: string[] = []
  lines.push('# robots.txt generated by llmoptimizer')
  if (opts.allowAll !== false) {
    lines.push('User-agent: *')
    lines.push('Allow: /')
    lines.push('')
  }
  if (opts.llmAllow !== false) {
    const bots = (opts.llmBots && opts.llmBots.length ? opts.llmBots : DEFAULT_LLM_BOTS)
    for (const bot of bots) {
      lines.push(`User-agent: ${bot}`)
      lines.push('Allow: /')
      lines.push('')
    }
  }
  if (opts.searchAllow !== false) {
    const bots = (opts.searchBots && opts.searchBots.length ? opts.searchBots : DEFAULT_SEARCH_BOTS)
    for (const bot of bots) {
      lines.push(`User-agent: ${bot}`)
      lines.push('Allow: /')
      lines.push('')
    }
  }
  if (opts.sitemaps && opts.sitemaps.length) {
    for (const sm of opts.sitemaps) lines.push(`Sitemap: ${sm}`)
  }
  return lines.join('\n') + '\n'
}
